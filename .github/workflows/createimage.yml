name: Build and Push Docker Image to ECR

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Login to Amazon ECR
        id: login-ecr
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region us-east-1
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 309682544380.dkr.ecr.us-east-1.amazonaws.com
      - name: Set initial version
        run: echo "::set-output name=VERSION::1.0.0"
      - name: Determine next version
        id: determine-version
        run: |
          # Obtener la última etiqueta de versión
          CURRENT_VERSION=$(git describe --tags --abbrev=0)
          
          if [[ "$CURRENT_VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            # Incrementar la versión de parche
            IFS='.' read -ra PARTS <<< "$CURRENT_VERSION"
            NEW_VERSION="${PARTS[0]}.${PARTS[1]}.$((PARTS[2] + 1))"
          elif [[ "$CURRENT_VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+-rc[0-9]+$ ]]; then
            # Incrementar la versión de la versión candidata de lanzamiento
            RC_NUMBER=${CURRENT_VERSION#*-rc}
            NEW_RC_NUMBER=$((RC_NUMBER + 1))
            NEW_VERSION="${CURRENT_VERSION%-*}-rc${NEW_RC_NUMBER}"
          else
            # Formato de versión no válido, establecer en 1.0.0
            NEW_VERSION="1.0.0"
          fi

          echo "CURRENT_VERSION: $CURRENT_VERSION"
          echo "NEW_VERSION: $NEW_VERSION"

          echo "::set-output name=NEW_VERSION::$NEW_VERSION"
      - name: Update image tag
        run: |
          echo "NEW_VERSION: $NEW_VERSION"
          MANIFEST=$(aws ecr batch-get-image --repository-name credit-card-simulator --image-ids imageTag=latest --output text --query images[].imageManifest)
          aws ecr put-image --repository-name credit-card-simulator --image-tag $NEW_VERSION --image-manifest "$MANIFEST"
          aws ecr batch-delete-image --repository-name credit-card-simulator --image-ids imageTag=latest
      - name: Build and Push Docker Image
        env:
          ECR_REPO: 309682544380.dkr.ecr.us-east-1.amazonaws.com/credit-card-simulator
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REPO:latest .
          docker tag $ECR_REPO:latest $ECR_REPO:latest
          docker push $ECR_REPO:latest
          docker push $ECR_REPO:latest
